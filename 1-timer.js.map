{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet timerId = null;\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const now = new Date();\n    if (selectedDates[0] <= now) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\n\nrefs.startBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      refs.input.disabled = false;\n      return;\n    }\n\n    updateTimer(delta);\n  }, 1000);\n});\n\n\nfunction updateTimer(ms) {\n  const time = convertMs(ms);\n  refs.days.textContent = time.days;\n  refs.hours.textContent = addLeadingZero(time.hours);\n  refs.minutes.textContent = addLeadingZero(time.minutes);\n  refs.seconds.textContent = addLeadingZero(time.seconds);\n}\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","userSelectedDate","timerId","options","selectedDates","now","iziToast","flatpickr","delta","updateTimer","ms","time","convertMs","addLeadingZero","value","days","hours","minutes","seconds"],"mappings":"2GAOA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAU,KAGd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAM,IAAI,KACZD,EAAc,CAAC,GAAKC,GACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAK,SAAS,SAAW,KAEzBC,EAAmBG,EAAc,CAAC,EAClCJ,EAAK,SAAS,SAAW,GAE5B,CACH,EAEAO,EAAUP,EAAK,MAAOG,CAAO,EAG7BH,EAAK,SAAS,iBAAiB,QAAS,IAAM,CACvCC,IAELD,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtBE,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAQP,EADF,IAAI,KAGhB,GAAIO,GAAS,EAAG,CACd,cAAcN,CAAO,EACrBO,EAAY,CAAC,EACbT,EAAK,MAAM,SAAW,GACtB,MACN,CAEIS,EAAYD,CAAK,CAClB,EAAE,GAAI,EACT,CAAC,EAGD,SAASC,EAAYC,EAAI,CACvB,MAAMC,EAAOC,EAAUF,CAAE,EACzBV,EAAK,KAAK,YAAcW,EAAK,KAC7BX,EAAK,MAAM,YAAca,EAAeF,EAAK,KAAK,EAClDX,EAAK,QAAQ,YAAca,EAAeF,EAAK,OAAO,EACtDX,EAAK,QAAQ,YAAca,EAAeF,EAAK,OAAO,CACxD,CAGA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASF,EAAUF,EAAI,CAMrB,MAAMK,EAAO,KAAK,MAAML,EAAK,KAAG,EAC1BM,EAAQ,KAAK,MAAON,EAAK,MAAO,IAAI,EACpCO,EAAU,KAAK,MAAOP,EAAK,KAAQ,GAAM,EACzCQ,EAAU,KAAK,MAAOR,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C"}